// Code generated by ogen, DO NOT EDIT.

package desc

import (
	"io"
	"net/url"
	"time"
)

// A plain text error message.
// Ref: #/ErrorResponse
type BadRequest struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s BadRequest) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*BadRequest) v1APISignupPostRes() {}

// HTML page content.
// Ref: #/HTMLPage
type HTMLResponse struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s HTMLResponse) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*HTMLResponse) v1PageGroupGroupNameGetRes()  {}
func (*HTMLResponse) v1PageProfileUsernameGetRes() {}
func (*HTMLResponse) v1PageSearchGetRes()          {}
func (*HTMLResponse) v1PageSigninGetRes()          {}
func (*HTMLResponse) v1PageSignupGetRes()          {}

// A plain text error message.
// Ref: #/ErrorResponse
type InternalError struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s InternalError) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*InternalError) v1APILogoutPostRes()          {}
func (*InternalError) v1APISigninPostRes()          {}
func (*InternalError) v1APISignupPostRes()          {}
func (*InternalError) v1PageGroupGroupNameGetRes()  {}
func (*InternalError) v1PageProfileUsernameGetRes() {}
func (*InternalError) v1PageSearchGetRes()          {}
func (*InternalError) v1PageSigninGetRes()          {}
func (*InternalError) v1PageSignupGetRes()          {}

// A plain text error message.
// Ref: #/ErrorResponse
type NotAuthorized struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s NotAuthorized) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*NotAuthorized) v1APILogoutPostRes()          {}
func (*NotAuthorized) v1APISigninPostRes()          {}
func (*NotAuthorized) v1PageGroupGroupNameGetRes()  {}
func (*NotAuthorized) v1PageProfileUsernameGetRes() {}

// A plain text error message.
// Ref: #/ErrorResponse
type NotFound struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s NotFound) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*NotFound) v1PageGroupGroupNameGetRes()  {}
func (*NotFound) v1PageProfileUsernameGetRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/Redirect302
type Redirect302 struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *Redirect302) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *Redirect302) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *Redirect302) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *Redirect302) SetSetCookie(val OptString) {
	s.SetCookie = val
}

func (*Redirect302) v1APILogoutPostRes() {}
func (*Redirect302) v1APISigninPostRes() {}
func (*Redirect302) v1APISignupPostRes() {}
func (*Redirect302) v1PageSigninGetRes() {}
func (*Redirect302) v1PageSignupGetRes() {}

type SessionAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/SignIn
type SignIn struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *SignIn) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *SignIn) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *SignIn) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *SignIn) SetPassword(val string) {
	s.Password = val
}

// Ref: #/SignUp
type SignUp struct {
	Email          string    `json:"email"`
	Password       string    `json:"password"`
	PasswordRepeat string    `json:"password_repeat"`
	Username       string    `json:"username"`
	Name           string    `json:"name"`
	Surname        string    `json:"surname"`
	DateOfBirth    time.Time `json:"date_of_birth"`
}

// GetEmail returns the value of Email.
func (s *SignUp) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *SignUp) GetPassword() string {
	return s.Password
}

// GetPasswordRepeat returns the value of PasswordRepeat.
func (s *SignUp) GetPasswordRepeat() string {
	return s.PasswordRepeat
}

// GetUsername returns the value of Username.
func (s *SignUp) GetUsername() string {
	return s.Username
}

// GetName returns the value of Name.
func (s *SignUp) GetName() string {
	return s.Name
}

// GetSurname returns the value of Surname.
func (s *SignUp) GetSurname() string {
	return s.Surname
}

// GetDateOfBirth returns the value of DateOfBirth.
func (s *SignUp) GetDateOfBirth() time.Time {
	return s.DateOfBirth
}

// SetEmail sets the value of Email.
func (s *SignUp) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *SignUp) SetPassword(val string) {
	s.Password = val
}

// SetPasswordRepeat sets the value of PasswordRepeat.
func (s *SignUp) SetPasswordRepeat(val string) {
	s.PasswordRepeat = val
}

// SetUsername sets the value of Username.
func (s *SignUp) SetUsername(val string) {
	s.Username = val
}

// SetName sets the value of Name.
func (s *SignUp) SetName(val string) {
	s.Name = val
}

// SetSurname sets the value of Surname.
func (s *SignUp) SetSurname(val string) {
	s.Surname = val
}

// SetDateOfBirth sets the value of DateOfBirth.
func (s *SignUp) SetDateOfBirth(val time.Time) {
	s.DateOfBirth = val
}
