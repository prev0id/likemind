// Code generated by ogen, DO NOT EDIT.

package desc

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// V1PageGroupGroupNameGet implements GET /v1/page/group/{group_name} operation.
	//
	// Returns an HTML page displaying details of a specific user group. Requires authentication.
	//
	// GET /v1/page/group/{group_name}
	V1PageGroupGroupNameGet(ctx context.Context, params V1PageGroupGroupNameGetParams) (V1PageGroupGroupNameGetRes, error)
	// V1PageProfileUsernameGet implements GET /v1/page/profile/{username} operation.
	//
	// Returns an HTML page displaying the user's profile information. Requires authentication.
	//
	// GET /v1/page/profile/{username}
	V1PageProfileUsernameGet(ctx context.Context, params V1PageProfileUsernameGetParams) (V1PageProfileUsernameGetRes, error)
	// V1PageSearchGet implements GET /v1/page/search operation.
	//
	// Returns an HTML page where users can search for other users, groups, or content.
	//
	// GET /v1/page/search
	V1PageSearchGet(ctx context.Context) (V1PageSearchGetRes, error)
	// V1PageSigninGet implements GET /v1/page/signin operation.
	//
	// Returns an HTML page for user sign-in.
	//
	// GET /v1/page/signin
	V1PageSigninGet(ctx context.Context) (V1PageSigninGetRes, error)
	// V1PageSignupGet implements GET /v1/page/signup operation.
	//
	// Returns an HTML page for user sign-up.
	//
	// GET /v1/page/signup
	V1PageSignupGet(ctx context.Context) (V1PageSignupGetRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
